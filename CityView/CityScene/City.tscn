[gd_scene load_steps=65 format=2]

[ext_resource path="res://CityView/CityScene/City.gd" type="Script" id=1]
[ext_resource path="res://CityView/CityScene/CameraAnchor3D.gd" type="Script" id=2]
[ext_resource path="res://CityView/Meshes/Terrain.gd" type="Script" id=3]
[ext_resource path="res://CityView/Meshes/WaterPlane.gd" type="Script" id=4]
[ext_resource path="res://CityView/Meshes/TestS3D.gd" type="Script" id=5]
[ext_resource path="res://CityView/Meshes/TransitTiles.gd" type="Script" id=6]
[ext_resource path="res://CityView/UI_scripts/building_menu.gd" type="Script" id=7]
[ext_resource path="res://CityView/UI_scripts/building_menu_btn.gd" type="Script" id=8]
[ext_resource path="res://CityView/UI_scripts/nature_btn.gd" type="Script" id=9]
[ext_resource path="res://CityView/UI_scripts/settings_menu.gd" type="Script" id=10]
[ext_resource path="res://CityView/UI_scripts/lands_btn.gd" type="Script" id=11]
[ext_resource path="res://CityView/UI_scripts/network_btn.gd" type="Script" id=12]
[ext_resource path="res://CityView/UI_scripts/engineering_btn.gd" type="Script" id=13]
[ext_resource path="res://CityView/UI_scripts/services_btn.gd" type="Script" id=14]
[ext_resource path="res://images/left_bottom_menu.png" type="Texture" id=15]
[ext_resource path="res://CityView/UI_scripts/networks_menu.gd" type="Script" id=16]
[ext_resource path="res://CityView/UI_scripts/rails_btn.gd" type="Script" id=17]
[ext_resource path="res://CityView/UI_scripts/seaport_btn.gd" type="Script" id=18]
[ext_resource path="res://CityView/UI_scripts/roads_btn.gd" type="Script" id=19]
[ext_resource path="res://CityView/UI_scripts/airport_btn.gd" type="Script" id=20]
[ext_resource path="res://CityView/UI_scripts/comm_btn.gd" type="Script" id=21]
[ext_resource path="res://CityView/UI_scripts/highway_btn.gd" type="Script" id=22]
[ext_resource path="res://CityView/UI_scripts/bubble.gd" type="Script" id=23]
[ext_resource path="res://CityView/UI_scripts/rails.gd" type="Script" id=24]
[ext_resource path="res://CityView/UI_scripts/monorail_station.gd" type="Script" id=25]
[ext_resource path="res://CityView/UI_scripts/monorail.gd" type="Script" id=26]
[ext_resource path="res://CityView/UI_scripts/passanger_station.gd" type="Script" id=27]
[ext_resource path="res://CityView/UI_scripts/big_station.gd" type="Script" id=28]
[ext_resource path="res://CityView/UI_scripts/cargo_station.gd" type="Script" id=29]
[ext_resource path="res://CityView/UI_scripts/settinngs_btn.gd" type="Script" id=30]
[ext_resource path="res://CityView/UI_scripts/save_btn.gd" type="Script" id=31]
[ext_resource path="res://CityView/UI_scripts/to_region_btn.gd" type="Script" id=32]
[ext_resource path="res://CityView/UI_scripts/snapshot_btn.gd" type="Script" id=33]
[ext_resource path="res://CityView/UI_scripts/sounds_btn.gd" type="Script" id=34]
[ext_resource path="res://CityView/UI_scripts/snapshot_gallery_btn.gd" type="Script" id=35]
[ext_resource path="res://CityView/UI_scripts/exit_btn.gd" type="Script" id=36]
[ext_resource path="res://CityView/UI_scripts/graphics_btn.gd" type="Script" id=37]
[ext_resource path="res://scene/screenshot_rect.tscn" type="PackedScene" id=38]
[ext_resource path="res://CityView/UI_scripts/settings_btn.gd" type="Script" id=39]
[ext_resource path="res://CityView/UI_scripts/confirm_exit_to_region_dialog.gd" type="Script" id=40]
[ext_resource path="res://CityView/UI_scripts/cancel_btn.gd" type="Script" id=41]
[ext_resource path="res://images/background.png" type="Texture" id=42]
[ext_resource path="res://CityView/UI_scripts/save_to_region_btn.gd" type="Script" id=43]
[ext_resource path="res://CityView/UI_scripts/without_save_to_region_btn.gd" type="Script" id=44]
[ext_resource path="res://CityView/UI_scripts/hide_menu_btn.gd" type="Script" id=45]
[ext_resource path="res://CityView/UI_scripts/left_bottom_menu.gd" type="Script" id=46]

[sub_resource type="ProceduralSky" id=15]
radiance_size = 0
sky_top_color = Color( 0.909804, 0.92549, 0.933333, 1 )
sky_horizon_color = Color( 1, 1, 1, 1 )
ground_bottom_color = Color( 0.909804, 0.92549, 0.933333, 1 )
ground_horizon_color = Color( 1, 1, 1, 1 )
texture_size = 0

[sub_resource type="Environment" id=1]
background_sky = SubResource( 15 )
background_sky_custom_fov = 92.2
background_color = Color( 0.317647, 0.341176, 0.352941, 1 )
background_energy = 0.0
ambient_light_color = Color( 1, 1, 1, 1 )
ambient_light_energy = 0.3

[sub_resource type="Shader" id=9]
code = "shader_type spatial;
render_mode depth_draw_always;

uniform sampler2D watermap;
// 512 to be used as 16 pixels per tile(1 per m) with octaves using 25 and 39.0625
// first octave means the texture encompasses 32 tiles before repeating, 10.24, 6.55 tiles for octaves 
// to reduce noticable repeatedness octaves should not repeat at the same interger number of tiles
uniform sampler2D noise_texture; //512x512 pixel noise texture
uniform sampler2D noise_normals; //provides prebaked normals
uniform int noise_octaves = 3; //number of scale steps used for layering
uniform float noise_persistance = 0.64; //strength of octaves; 1.0 -> 0.4 -> 0.16
uniform float noise_lacunarity = 0.94; //scale step between ocraves; 1.0 -> 0.6 -> 0.36
uniform float noise_angle_ransomness = 8.0; //range for randomness of direction
uniform vec2 noise_direction = vec2(0.4, 0.2); //controlls direction of motion
uniform float noise_time_scale = 60.0; //speed control
uniform float wave_height_scale = 4.0;
uniform float wave_width_scale = 60.0;
uniform float normal_horizontal = 1.0;
uniform float normal_vertical = 1.0;
uniform float beach_wave_str = 10.0;
uniform float beach_wave_threshold = 0.9;
uniform float open_wave_str = 20.0;
uniform float open_wave_threshold = 0.95;
varying float noise_height;

uniform sampler2DArray watertexture : hint_albedo;
uniform int zoom;
uniform float tiling_factor;
uniform float max_depth;
uniform float depth_range;
uniform float water_fog_density: hint_range(0.0, 2.0) = 1.668;
varying vec2 coord;
varying highp vec4 n_val1;
varying highp vec4 n_val2;
varying highp vec4 n_val3;

uniform float rim = 1.0;
uniform float metallic = 1.0;
uniform float roughness = 0.3;

vec4 noise_values(vec2 coords, int oct){
	float pers_str = pow(noise_persistance, float(oct));
	float lacu_scl = pow(noise_lacunarity, float(oct));
	vec2 rand_vec = vec2((2.0*texelFetch(noise_texture, ivec2(53*oct, 47*oct), 0).x -1.0) * noise_angle_ransomness, (2.0*texelFetch(noise_texture, ivec2(47*oct, 53*oct), 0).x -1.0) * noise_angle_ransomness);
	vec2 flow = ((noise_direction + rand_vec) * (TIME * noise_time_scale))*(lacu_scl+4.0);
	vec2 pixel_loc = ((coords+flow) * wave_width_scale * (1.0/lacu_scl));//, vec2(2048.0, 2048.0));
	
	vec4 values = vec4(pixel_loc, pers_str, 1.0);
	return values;
}

void vertex(){
	coord = VERTEX.xz;
	noise_height = 0.0;
	n_val1 = noise_values(coord, 0);
	noise_height += (pow(texture(noise_texture, mod(n_val1.rg/1024.0, 1.0)).x, 2.0) * n_val1.b);
	n_val2 = noise_values(coord, 1);
	noise_height -= (pow(texture(noise_texture, mod(n_val2.gr/1024.0, 1.0)).x, 2.0) * n_val2.b);
	n_val3 = noise_values(coord, 2);
	noise_height -= (pow(texture(noise_texture, mod(n_val3.rg/1024.0, 1.0)).x, 2.0) * n_val3.b);
	noise_height = 2.0 * (noise_height / (n_val1.b + n_val2.b + n_val3.b)) - 1.0;
	VERTEX.y += noise_height*wave_height_scale;
	
}

void fragment(){
	
	float depth = texture(DEPTH_TEXTURE, SCREEN_UV).r;
	vec3 ndc = vec3(SCREEN_UV, depth) * 2.0 - 1.0;
	vec4 view = INV_PROJECTION_MATRIX * vec4(ndc, 1.0);
	view.xyz /= view.w;
	
	float delta_depth = abs((view.z) - (VERTEX.z));
	float depth_alpha = 1.0;
	if (delta_depth < 6.0){
		depth_alpha = min((delta_depth / 5.0) + 0.1, 1.0);
	}
	float zoom_ind = min( float(zoom-1), 4.0);
	vec3 noisenormal = vec3(0.0);
	vec4 noise_tex = texture(noise_normals, mod(n_val1.rg/1024.0, 1.0));// * vec4(2.0, 2.0, 1.0, 1.0) - vec4(1.0, 1.0, 0.0, 0.0);
	noisenormal += (normalize(vec3(normal_horizontal*(2.0*sqrt(noise_tex.r)-1.0), normal_vertical*(2.0*sqrt(noise_tex.b)-1.0), normal_horizontal*(2.0*sqrt(noise_tex.g)-1.0))) * n_val1.b);
	noise_tex = texture(noise_normals, mod(n_val2.rg/1024.0, 1.0));// * vec4(2.0, 2.0, 1.0, 1.0) - vec4(1.0, 1.0, 0.0, 0.0);
	noisenormal += (normalize(vec3(normal_horizontal*(2.0*(noise_tex.g)-1.0), normal_vertical*(2.0*(noise_tex.b)-1.0), normal_horizontal*(2.0*(noise_tex.r)-1.0))) * n_val2.b);
	noise_tex = texture(noise_normals, mod(n_val3.rg/1024.0, 1.0));// * vec4(2.0, 2.0, 1.0, 1.0) - vec4(1.0, 1.0, 0.0, 0.0);
	noisenormal -= (normalize(vec3(normal_horizontal*(2.0*sqrt(noise_tex.r)-1.0), normal_vertical*(2.0*sqrt(noise_tex.b)-1.0), normal_horizontal*(2.0*sqrt(noise_tex.g)-1.0))) * n_val3.b);
	NORMAL = normalize((PROJECTION_MATRIX * INV_CAMERA_MATRIX * WORLD_MATRIX * vec4(normalize(noisenormal), 0.0)).rgb);
	vec3 break_col = vec3(0.0);
	if (noisenormal.y/3.0 < open_wave_threshold){
		break_col = vec3((open_wave_threshold - noisenormal.y/3.0)*open_wave_str);
		}
	if (depth_alpha < 0.8){
		if (noisenormal.y/3.0 < beach_wave_threshold){
			break_col += min(((depth_alpha-0.1)*3.0), 1.0) * pow(vec3(1.0 - (1.25*depth_alpha)) * vec3((beach_wave_threshold - noisenormal.y/3.0)*beach_wave_str), vec3(2.0));
			depth_alpha += break_col.r;
		}
	}
	
	RIM = rim;
	METALLIC = metallic;
	ROUGHNESS = roughness;
	ALBEDO = texture(watertexture, vec3(vec2(0.0, 0.0), float(zoom_ind))).rgb + break_col;
	ALPHA = sqrt(depth_alpha);
	//ALBEDO = vec3(normalize(noisenormal))*.5+.5;
}"

[sub_resource type="ShaderMaterial" id=10]
shader = SubResource( 9 )
shader_param/noise_octaves = 3
shader_param/noise_persistance = 0.77
shader_param/noise_lacunarity = 0.615
shader_param/noise_angle_ransomness = 10.0
shader_param/noise_direction = Vector2( -0.5, -0.4 )
shader_param/noise_time_scale = 0.007
shader_param/wave_height_scale = 0.09
shader_param/wave_width_scale = 100.0
shader_param/normal_horizontal = 1.156
shader_param/normal_vertical = 1.0
shader_param/beach_wave_str = 70.0
shader_param/beach_wave_threshold = 0.372
shader_param/open_wave_str = 50.0
shader_param/open_wave_threshold = 0.348
shader_param/zoom = null
shader_param/tiling_factor = null
shader_param/max_depth = null
shader_param/depth_range = null
shader_param/water_fog_density = 1.668
shader_param/rim = 0.0
shader_param/metallic = 0.0
shader_param/roughness = 0.0

[sub_resource type="OpenSimplexNoise" id=11]
seed = 23
octaves = 1
persistence = 0.64
lacunarity = 0.64

[sub_resource type="NoiseTexture" id=12]
flags = 0
width = 1024
height = 1024
seamless = true
noise = SubResource( 11 )

[sub_resource type="OpenSimplexNoise" id=13]
seed = 23
octaves = 1
period = 32.0
persistence = 0.64
lacunarity = 0.64

[sub_resource type="NoiseTexture" id=14]
flags = 22
width = 1024
height = 1024
seamless = true
as_normalmap = true
bump_strength = 10.0
noise = SubResource( 13 )

[sub_resource type="Shader" id=4]
code = "shader_type spatial;
render_mode depth_draw_always;

uniform sampler2DArray terrain : hint_albedo;
uniform int zoom;
uniform sampler2D layer;
uniform sampler2D watermap;
varying smooth vec3 coord_pass;
varying smooth float map_str;
const float PI = 3.14159265358979323846;
uniform float cliff_ind;
uniform float beach_ind;
uniform float tiling_factor;
uniform float water_height = 15.625; //250.0/16.0
uniform bool grid_bool = false;
uniform float beach_ht_range;
varying float norm_x;
varying float norm_y;
varying float norm_z;
varying flat float layer_i_0; 
varying flat float layer_i_1; 
varying flat float layer_i_2; 
varying float beach_str;
//varying flat vec3 normal;

void vertex()
{
	coord_pass = VERTEX.xyz;
	
	map_str = (texelFetch(watermap, ivec2(coord_pass.zx), 0).r*beach_ht_range);
	vec3 w_norm = normalize((vec4(NORMAL, 0.0)).rgb);
	norm_x = w_norm.x;
	norm_y = w_norm.y;
	norm_z = w_norm.z;
	layer_i_0 = COLOR.a * 255.0;
	layer_i_1 = UV2.x * 255.0;
	layer_i_2 = UV2.y * 255.0;
	beach_str = pow(min((texelFetch(watermap, ivec2(coord_pass.xz).yx, 0).r) * 100.0, 1.0), 4.0);
	//normal = normalize((inverse(WORLD_MATRIX) * vec4(NORMAL, 0.0)).rgb);
	//if (map_str < (beach_ht_range/2.0)){
	//	map_str = min(map_str, 1.0);
	//}
	//else{
	//	map_str = 0.0;
	//}
}

void fragment()
{
	float zoom_ind = min( float(zoom-1), 4.0);
	vec2 coord = coord_pass.xz;
	
	float layer_w_0 = COLOR.r;
	float layer_w_1 = COLOR.g;
	float layer_w_2 = COLOR.b;
	// might not be the fastest way of doing this
	ivec2 icoord1 = ivec2(coord);
	ivec2 icoord2 = icoord1 + ivec2(0, 1);
	ivec2 icoord3 = icoord1 + ivec2(1, 0);
	
	vec3 beach_col = texture(terrain, vec3(UV.y*tiling_factor, UV.x*tiling_factor, float(zoom_ind)+beach_ind)).rgb;
		
	vec2 rem1 = abs(vec2(icoord1) - coord);
	vec2 rem2 = abs(vec2(icoord2) - coord);
	vec2 rem3 = abs(vec2(icoord3) - coord);
	vec3 grid = vec3(1.0, 1.0, 1.0);
	if (grid_bool){
		if (rem1.x < (0.05 * max(5.0-float(zoom_ind), 0.0)) ){
			grid = vec3(0.6, 0.6, 0.6);
		}
		if (rem1.y < (0.05 * max((5.0-float(zoom_ind)), 0.0))) {
			if (grid_bool == true) {
				grid = vec3(0.6, 0.6, 0.6);
			}
		}
	}
	float sum_str = layer_w_0 + layer_w_1 + layer_w_2;
	vec3 col1 = (texture(terrain, vec3(UV.x*tiling_factor, UV.y*tiling_factor, float(zoom_ind)+layer_i_0)).rgb * (1.0 - beach_str) + (beach_str * beach_col)) * (layer_w_0/sum_str);
	vec3 col2 = (texture(terrain, vec3(UV.x*tiling_factor, UV.y*tiling_factor, float(zoom_ind)+layer_i_1)).rgb * (1.0 - beach_str) + (beach_str * beach_col)) * (layer_w_1/sum_str);
	vec3 col3 = (texture(terrain, vec3(UV.x*tiling_factor, UV.y*tiling_factor, float(zoom_ind)+layer_i_2)).rgb * (1.0 - beach_str) + (beach_str * beach_col)) * (layer_w_2/sum_str);
	//cliffs
	vec3 overlay = vec3(0.0, 0.0, 0.0);
	vec3 underlay = vec3(0.0, 0.0, 0.0);
	float over_str = 0.0;
	//vec3 normal = normalize((vec4(NORMAL, 0.0) * inverse(WORLD_MATRIX)).xyz);
	vec3 normal = normalize(vec3(norm_x, norm_y, norm_z));
	if (normal.y < 0.75){
		over_str = (max(min(((0.75-(normal.y))*8.0), 1.0), 0.01));
		if (abs(normal.x) > abs(normal.z)){
			overlay = texture(terrain, vec3(UV.y*2.0*tiling_factor, UV.x*2.0*tiling_factor, float(zoom_ind)+cliff_ind)).rgb;
		}
		else{
			overlay = texture(terrain, vec3(UV.x*2.0*tiling_factor, UV.y*2.0*tiling_factor, float(zoom_ind)+cliff_ind)).rgb;
		}
	}
	ALBEDO = (
				(
				(
					(col1 + col2 + col3) * (1.0-over_str)
					) 
				+ (overlay * over_str)
				)
			) * grid;
	//ALBEDO = vec3(normal.g)*2.0-1.0;
	
	}"

[sub_resource type="ShaderMaterial" id=5]
shader = SubResource( 4 )
shader_param/zoom = null
shader_param/cliff_ind = null
shader_param/beach_ind = null
shader_param/tiling_factor = null
shader_param/water_height = 15.625
shader_param/grid_bool = false
shader_param/beach_ht_range = null

[sub_resource type="Shader" id=16]
code = "shader_type spatial;
render_mode depth_draw_always;

uniform sampler2DArray s3dtexture : hint_albedo;
uniform sampler2D nois_texture: hint_albedo;
uniform vec2 direction = vec2(1.0, 0.0);

void fragment(){
	ivec2 iUV = (ivec2(UV * vec2(1280, 720) * vec2(341) + (direction * TIME))%ivec2(1024));
	vec3 noise_col = pow(texelFetch(nois_texture, iUV, 0).rgb * vec3(2.0), vec3(2.0));//*vec3(0.4, 0.8, 0.4);
	ALBEDO = min(texture(s3dtexture, vec3(UV, 0.0)).rgb * noise_col, vec3(1.0));
	ALPHA = texture(s3dtexture, vec3(UV, 0.0)).a;
	ALPHA_SCISSOR = 0.9;
}
	"

[sub_resource type="ShaderMaterial" id=17]
shader = SubResource( 16 )
shader_param/direction = Vector2( 40, 20 )

[sub_resource type="Shader" id=7]
code = "shader_type spatial;
render_mode depth_draw_always;

uniform sampler2DArray terrain : hint_albedo;
uniform int zoom;
varying smooth float height_var;
varying flat float height_flat;
const float PI = 3.14159265358979323846;
uniform float tiling_factor;
uniform float top_ind;
uniform float mid_ind;
uniform float bot_ind;

void vertex()
{
	height_var = VERTEX.y;
	height_flat = VERTEX.y;
	
}

void fragment()
{
	float edge_tex = 0.0;
	float zoom_ind = min(float(zoom), 4.0); // only farthest zooms have mipmaps
	if (UV.y > 0.3152){
		edge_tex = bot_ind;
		}
	else{  
		if(UV.y > 0.1576){
			edge_tex = mid_ind;
		}
		else{
			edge_tex = top_ind;
		}
	}
	float uvx = UV.x*tiling_factor;
	float uvy = UV.y*tiling_factor;
	if (zoom < 4){
		float div = 1.0 / pow(2.0, float(4-zoom)); // farther zooms (lower zoom value) have smaller textures
		uvx = mod(uvx, div);
		uvy = mod(uvy, div);
	}
	ALBEDO = texture(terrain, vec3(uvx, uvy, float(zoom_ind)+edge_tex)).rgb;
}"

[sub_resource type="ShaderMaterial" id=8]
shader = SubResource( 7 )
shader_param/zoom = null
shader_param/tiling_factor = null
shader_param/top_ind = null
shader_param/mid_ind = null
shader_param/bot_ind = null

[sub_resource type="Shader" id=18]
code = "shader_type spatial;
render_mode depth_draw_always;

uniform sampler2DArray textarr : hint_albedo;
varying float built;
//uniform sampler2D layer : hint_albedo;
varying flat float index;

void vertex(){
	built = 0.0;
	if (UV2.g > 127.0){
		built = 1.0;
		}
	index = (UV2.r) + (floor(mod(UV2.g, 128.0)) * 256.0);
	
}

void fragment(){
	vec4 frag = texture(textarr, vec3(UV, index));
	float alpha = frag.a;
	vec4 col = vec4(1.0);
	if(built == 0.0){
		col = COLOR;
		alpha = col.a;
		}
	ALBEDO = frag.rgb * col.rgb;
	ALPHA = alpha;
}"

[sub_resource type="ShaderMaterial" id=19]
render_priority = 1
shader = SubResource( 18 )

[sub_resource type="ButtonGroup" id=21]

[sub_resource type="ButtonGroup" id=20]

[node name="City" type="Spatial"]
script = ExtResource( 1 )
__meta__ = {
"_edit_horizontal_guides_": [ 168.0, 216.0, 264.0, 312.0, 368.0 ],
"_edit_vertical_guides_": [ 23.0 ]
}

[node name="Sun" type="DirectionalLight" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 7.81531e-08, 0, -7.81531e-08, 1, 0, 0, 0 )
light_specular = 0.0
light_bake_mode = 0
shadow_enabled = true
shadow_bias = 1.422
directional_shadow_mode = 0

[node name="WorldEnvironment" type="WorldEnvironment" parent="."]
environment = SubResource( 1 )
__meta__ = {
"_editor_description_": "Default environment"
}

[node name="Spatial" type="Spatial" parent="."]
transform = Transform( 1, 0, 0, 0, 1, 0, 0, 0, 1, -64, 0, -64 )

[node name="WaterPlane" type="MeshInstance" parent="Spatial"]
material_override = SubResource( 10 )
skeleton = NodePath("../..")
software_skinning_transform_normals = false
script = ExtResource( 4 )

[node name="NoiseTexture" type="TextureRect" parent="Spatial/WaterPlane"]
visible = false
margin_left = 107.0
margin_top = 169.0
margin_right = 1131.0
margin_bottom = 1193.0
texture = SubResource( 12 )

[node name="NoiseNormals" type="TextureRect" parent="Spatial/WaterPlane"]
visible = false
margin_left = -407.0
margin_top = 170.0
margin_right = 617.0
margin_bottom = 1194.0
texture = SubResource( 14 )

[node name="Terrain" type="MeshInstance" parent="Spatial"]
material_override = SubResource( 5 )
skeleton = NodePath("../..")
software_skinning_transform_normals = false
script = ExtResource( 3 )

[node name="TestS3D" type="MeshInstance" parent="Spatial"]
material_override = SubResource( 17 )
software_skinning_transform_normals = false
script = ExtResource( 5 )

[node name="Border" type="MeshInstance" parent="Spatial"]
material_override = SubResource( 8 )
cast_shadow = 2
software_skinning_transform_normals = false

[node name="TransitTiles" type="MeshInstance" parent="Spatial"]
material_override = SubResource( 19 )
script = ExtResource( 6 )

[node name="CameraHandler" type="KinematicBody" parent="."]
transform = Transform( -0.924, 0, 0.191, 0, -1, 0.866, 0.383, 1, 0.462, 0, 15.625, 0 )
script = ExtResource( 2 )

[node name="Camera" type="Camera" parent="CameraHandler"]
projection = 1
current = true
size = 292.0
near = 1.0
far = 200.0

[node name="CanvasLayer" type="CanvasLayer" parent="."]

[node name="Control" type="Control" parent="CanvasLayer"]
anchor_right = 1.0
anchor_bottom = 1.0

[node name="left_bottom_menu" type="TextureRect" parent="CanvasLayer/Control"]
anchor_top = 1.0
anchor_bottom = 1.0
margin_left = 5.0
margin_top = -157.0
margin_right = 240.0
margin_bottom = -5.0
rect_min_size = Vector2( 235, 152 )
texture = ExtResource( 15 )
script = ExtResource( 46 )

[node name="building_menu_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu"]
margin_left = 97.0
margin_top = -41.0
margin_right = 157.0
margin_bottom = 5.0
rect_min_size = Vector2( 60, 46 )
toggle_mode = true
group = SubResource( 21 )
script = ExtResource( 8 )

[node name="building_menu" type="TextureRect" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn"]
margin_left = -95.0
margin_top = -441.0
margin_right = 62.0
margin_bottom = 48.0
rect_min_size = Vector2( 157, 489 )
script = ExtResource( 7 )
__meta__ = {
"_edit_lock_": true
}

[node name="nature_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu"]
margin_left = 9.0
margin_top = 16.0
margin_right = 73.0
margin_bottom = 66.0
rect_min_size = Vector2( 64, 50 )
script = ExtResource( 9 )

[node name="lands_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu"]
margin_left = 9.0
margin_top = 66.0
margin_right = 73.0
margin_bottom = 116.0
rect_min_size = Vector2( 64, 50 )
script = ExtResource( 11 )

[node name="networks_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu"]
margin_left = 9.0
margin_top = 116.0
margin_right = 73.0
margin_bottom = 166.0
rect_min_size = Vector2( 64, 50 )
toggle_mode = true
script = ExtResource( 12 )

[node name="networks_menu" type="TextureRect" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn"]
show_behind_parent = true
margin_left = -3.0
margin_top = -76.0
margin_right = 86.0
margin_bottom = 225.0
rect_min_size = Vector2( 89, 301 )
script = ExtResource( 16 )

[node name="roads_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu"]
margin_left = 73.0
margin_top = 8.0
margin_right = 120.0
margin_bottom = 45.0
rect_min_size = Vector2( 47, 37 )
script = ExtResource( 19 )

[node name="highway_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu"]
margin_left = 73.0
margin_top = 60.0
margin_right = 120.0
margin_bottom = 97.0
rect_min_size = Vector2( 47, 37 )
script = ExtResource( 22 )

[node name="rails_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu"]
margin_left = 73.0
margin_top = 110.0
margin_right = 120.0
margin_bottom = 147.0
rect_min_size = Vector2( 47, 37 )
toggle_mode = true
script = ExtResource( 17 )

[node name="bubble" type="TextureRect" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn"]
show_behind_parent = true
margin_left = -4.0
margin_top = -10.0
margin_right = 36.0
margin_bottom = 30.0
script = ExtResource( 23 )

[node name="rails" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble"]
margin_left = 80.0
margin_top = -140.0
margin_right = 124.0
margin_bottom = -96.0
rect_min_size = Vector2( 44, 44 )
toggle_mode = true
group = SubResource( 20 )
script = ExtResource( 24 )

[node name="passanger_station" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble"]
margin_left = 80.0
margin_top = -92.0
margin_right = 124.0
margin_bottom = -48.0
rect_min_size = Vector2( 44, 44 )
toggle_mode = true
group = SubResource( 20 )
script = ExtResource( 27 )

[node name="cargo_station" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble"]
margin_left = 80.0
margin_top = -44.0
margin_right = 124.0
rect_min_size = Vector2( 44, 44 )
toggle_mode = true
group = SubResource( 20 )
script = ExtResource( 29 )

[node name="big_station" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble"]
margin_left = 80.0
margin_top = 4.0
margin_right = 124.0
margin_bottom = 48.0
rect_min_size = Vector2( 44, 44 )
toggle_mode = true
group = SubResource( 20 )
script = ExtResource( 28 )

[node name="monorail" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble"]
margin_left = 80.0
margin_top = 60.0
margin_right = 124.0
margin_bottom = 104.0
rect_min_size = Vector2( 44, 44 )
toggle_mode = true
group = SubResource( 20 )
script = ExtResource( 26 )

[node name="monorail_station" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble"]
margin_left = 80.0
margin_top = 116.0
margin_right = 124.0
margin_bottom = 160.0
rect_min_size = Vector2( 44, 44 )
toggle_mode = true
group = SubResource( 20 )
script = ExtResource( 25 )

[node name="comm_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu"]
margin_left = 73.0
margin_top = 162.0
margin_right = 120.0
margin_bottom = 199.0
rect_min_size = Vector2( 47, 37 )
script = ExtResource( 21 )

[node name="airport_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu"]
margin_left = 73.0
margin_top = 212.0
margin_right = 120.0
margin_bottom = 249.0
rect_min_size = Vector2( 47, 37 )
script = ExtResource( 20 )

[node name="seaport_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu"]
margin_left = 73.0
margin_top = 260.0
margin_right = 120.0
margin_bottom = 297.0
rect_min_size = Vector2( 47, 37 )
script = ExtResource( 18 )

[node name="engineering_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu"]
margin_left = 9.0
margin_top = 167.0
margin_right = 73.0
margin_bottom = 217.0
rect_min_size = Vector2( 64, 50 )
script = ExtResource( 13 )

[node name="services_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu"]
margin_left = 9.0
margin_top = 220.0
margin_right = 73.0
margin_bottom = 270.0
rect_min_size = Vector2( 64, 50 )
script = ExtResource( 14 )

[node name="settings_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu"]
margin_left = 193.0
margin_top = 115.0
margin_right = 253.0
margin_bottom = 161.0
grow_horizontal = 2
grow_vertical = 2
rect_min_size = Vector2( 60, 46 )
rect_scale = Vector2( 0.66, 0.66 )
toggle_mode = true
group = SubResource( 21 )
script = ExtResource( 39 )

[node name="settings_menu" type="TextureRect" parent="CanvasLayer/Control/left_bottom_menu"]
margin_left = 228.0
margin_top = 109.0
margin_right = 704.0
margin_bottom = 152.0
rect_min_size = Vector2( 476, 43 )
script = ExtResource( 10 )

[node name="HBoxContainer" type="HBoxContainer" parent="CanvasLayer/Control/left_bottom_menu/settings_menu"]
anchor_right = 1.0
anchor_bottom = 1.0
margin_top = 3.0
alignment = 1

[node name="save_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 22.0
margin_right = 62.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 31 )

[node name="empty_space_1" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 66.0
margin_right = 74.0
margin_bottom = 41.0
rect_min_size = Vector2( 8, 0 )

[node name="to_region_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 78.0
margin_right = 118.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 32 )

[node name="empty_space_2" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 122.0
margin_right = 130.0
margin_bottom = 41.0
rect_min_size = Vector2( 8, 0 )

[node name="exit_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 134.0
margin_right = 174.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 36 )

[node name="empty_space_3" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 178.0
margin_right = 186.0
margin_bottom = 41.0
rect_min_size = Vector2( 8, 0 )

[node name="snapshot_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 190.0
margin_right = 230.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 33 )

[node name="empty_space_4" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 234.0
margin_right = 242.0
margin_bottom = 41.0
rect_min_size = Vector2( 8, 0 )

[node name="snapshot_gallery_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 246.0
margin_right = 286.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 35 )

[node name="empty_space_5" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 290.0
margin_right = 298.0
margin_bottom = 41.0
rect_min_size = Vector2( 8, 0 )

[node name="graphics_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 302.0
margin_right = 342.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 37 )

[node name="empty_space_6" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 346.0
margin_right = 354.0
margin_bottom = 41.0
rect_min_size = Vector2( 8, 0 )

[node name="VBoxContainer(intentional)" type="VBoxContainer" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 358.0
margin_right = 398.0
margin_bottom = 41.0

[node name="empty_vertical_space" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/VBoxContainer(intentional)"]
modulate = Color( 1, 1, 1, 0 )
margin_right = 40.0
margin_bottom = 1.0
rect_min_size = Vector2( 0, 1 )

[node name="sounds_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/VBoxContainer(intentional)"]
margin_top = 5.0
margin_right = 40.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 34 )

[node name="empty_space_7" type="Panel" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
modulate = Color( 1, 1, 1, 0 )
margin_left = 402.0
margin_right = 410.0
margin_bottom = 41.0
rect_min_size = Vector2( 8, 0 )

[node name="settinngs_btn" type="TextureButton" parent="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer"]
margin_left = 414.0
margin_right = 454.0
margin_bottom = 41.0
rect_min_size = Vector2( 40, 36 )
script = ExtResource( 30 )

[node name="hide_menu_btn" type="TextureButton" parent="CanvasLayer/Control"]
margin_left = 15.0
margin_top = 687.0
margin_right = 36.0
margin_bottom = 706.0
rect_min_size = Vector2( 21, 19 )
script = ExtResource( 45 )

[node name="screenshot_rect" parent="CanvasLayer" instance=ExtResource( 38 )]
visible = false
margin_left = 575.0
margin_top = 252.0
margin_right = 737.0
margin_bottom = 374.0

[node name="confirm_exit_to_region_dialog" type="Control" parent="CanvasLayer"]
visible = false
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -80.0
margin_top = -60.0
margin_right = 80.0
margin_bottom = 60.0
rect_min_size = Vector2( 178, 185 )
script = ExtResource( 40 )

[node name="background" type="TextureRect" parent="CanvasLayer/confirm_exit_to_region_dialog"]
anchor_right = 1.0
anchor_bottom = 1.0
texture = ExtResource( 42 )

[node name="cancel_btn" type="TextureButton" parent="CanvasLayer/confirm_exit_to_region_dialog/background"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -70.0
margin_top = 51.0
margin_right = 70.0
margin_bottom = 81.0
rect_min_size = Vector2( 140, 30 )
script = ExtResource( 41 )

[node name="Label" type="Label" parent="CanvasLayer/confirm_exit_to_region_dialog/background/cancel_btn"]
modulate = Color( 0.223529, 0.286275, 0.388235, 1 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -21.0
margin_top = -7.0
margin_right = 21.0
margin_bottom = 7.0
text = "Cancel"

[node name="save_to_region_btn" type="TextureButton" parent="CanvasLayer/confirm_exit_to_region_dialog/background"]
anchor_left = 0.5
anchor_right = 0.5
margin_left = -70.0
margin_top = 12.0
margin_right = 70.0
margin_bottom = 42.0
rect_min_size = Vector2( 140, 30 )
disabled = true
script = ExtResource( 43 )

[node name="Label" type="Label" parent="CanvasLayer/confirm_exit_to_region_dialog/background/save_to_region_btn"]
modulate = Color( 0.223529, 0.286275, 0.388235, 1 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -67.0
margin_top = -7.0
margin_right = 67.0
margin_bottom = 7.0
text = "Exit and Save"
align = 1

[node name="without_save_to_region_btn" type="TextureButton" parent="CanvasLayer/confirm_exit_to_region_dialog/background"]
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -70.0
margin_top = -39.0
margin_right = 70.0
margin_bottom = -9.0
rect_min_size = Vector2( 140, 30 )
script = ExtResource( 44 )

[node name="Label" type="Label" parent="CanvasLayer/confirm_exit_to_region_dialog/background/without_save_to_region_btn"]
modulate = Color( 0.223529, 0.286275, 0.388235, 1 )
anchor_left = 0.5
anchor_top = 0.5
anchor_right = 0.5
anchor_bottom = 0.5
margin_left = -54.0
margin_top = -7.0
margin_right = 54.0
margin_bottom = 7.0
text = "Exit without save"
align = 1

[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/building_menu_btn" to="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu" method="_on_building_menu_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/building_menu_btn" to="CanvasLayer/Control/left_bottom_menu/settings_menu" method="_on_building_menu_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn" to="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu" method="_on_networks_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn" to="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble" method="_on_rails_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble/rails" to="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble/rails" method="_on_rails_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble/monorail" to="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu/networks_btn/networks_menu/rails_btn/bubble/monorail" method="_on_monorail_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/settings_btn" to="CanvasLayer/Control/left_bottom_menu/building_menu_btn/building_menu" method="_on_settings_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/settings_btn" to="CanvasLayer/Control/left_bottom_menu/settings_menu" method="_on_settings_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/save_btn" to="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/save_btn" method="_on_save_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/to_region_btn" to="CanvasLayer/confirm_exit_to_region_dialog" method="_on_to_region_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/exit_btn" to="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/exit_btn" method="_on_exit_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/left_bottom_menu/settings_menu/HBoxContainer/snapshot_btn" to="CanvasLayer/screenshot_rect" method="_on_snapshot_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/Control/hide_menu_btn" to="CanvasLayer/Control/left_bottom_menu" method="_on_hide_menu_btn_pressed"]
[connection signal="gui_input" from="CanvasLayer/confirm_exit_to_region_dialog" to="CanvasLayer/confirm_exit_to_region_dialog" method="_on_confirm_exit_to_region_dialog_gui_input"]
[connection signal="pressed" from="CanvasLayer/confirm_exit_to_region_dialog/background/cancel_btn" to="CanvasLayer/confirm_exit_to_region_dialog" method="_on_cancel_btn_pressed"]
[connection signal="pressed" from="CanvasLayer/confirm_exit_to_region_dialog/background/without_save_to_region_btn" to="CanvasLayer/confirm_exit_to_region_dialog/background/without_save_to_region_btn" method="_on_without_save_to_region_btn_pressed"]
